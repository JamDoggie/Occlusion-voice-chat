# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Windows Server 2019
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
    
      - name: Clone in the installer to a folder.
        uses: actions/checkout@v2
        with:
          repository: 'JamDoggie/CrossPlatformInstallerBase'
          path: 'occlusioninstallerclone/'

      - name: Publish Occlusion to a folder.
        run: 
          dotnet publish "${{ github.workspace }}\Occlusion Voice Chat_CrossPlatform\Occlusion Voice Chat_CrossPlatform.csproj" -c "Release Win" -r win-x64 --self-contained true --output "occlusionwinrelease\"

      - name: Zip the published binaries.
        uses: papeloto/action-zip@v1
        with:
          files: occlusionwinrelease/ Occlusion Voice Chat_CrossPlatform.exe
          recursive: false
          dest: programfiles.zip
          
      - name: Copy the published binaries into the installer.
        uses: canastro/copy-file-action@master
        with:
          source: "programfiles.zip"
          target: "occlusioninstallerclone/CrossPlatformInstallerBase/installerfiles/"
          
      - name: Testing artifact saving
        uses: actions/upload-artifact@v2
        with:
          name: installer-artifact
          path: occlusioninstallerclone/CrossPlatformInstallerBase/installerfiles/programfiles.zip
